package com.sumey.niuke.jianzhiOffer;

/**
 * @author sumey
 * @date 2018/9/8 下午7:13
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * <p>
 * 题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 */

/**
 *  题目描述：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * */

/**
 * 补充一下计算机二进制表示
 * 最高位：0表示正数 1表示负数
 * 正数：原码即为补码 负数：补码为去掉符号位，剩下的取反+1
 * 补码求原码：正数保持不变，负数去掉符号位，剩下的取反+1
 * 一句话：补码的补码就是原码
 * */
public class S11_numberOf1_InBinary {
    public int NumberOf1(int n) {
        int count = 0;
        if (n < 0) {
            n = n & 0x7fffffff;   //把负数变为正数
            count++;
        }
        while (n != 0) {
            count += n & 1;     //判断最低位是不是1，是就加1，否则就加0
            n = n >> 1;
        }
        return count;
    }
}
